// ~/lf-ros-demo/lf-project/src/Receiver.lf
target CCpp {
cmake-include: "include/composition.cmake"
};

preamble {=
#include <memory>
#include "subscriber_member_function.cpp"
#include "rclcpp/rclcpp.hpp"
#include "std_msgs/msg/string.hpp"
=}

reactor Receiver {
// Instantiate the subscriber node as a sate variable
state subscriber_node : std::shared_ptr<MinimalSubscriber>;
reaction(startup) {=
// Initialize rclcpp
rclcpp::init(0, NULL);
// Instantiate the ROs node
// Note: Receiving messages is still done in ROS
self->subscriber_node = std::make_shared<MinimalSubscriber>(); //TODO:Fix
// Start the rclcpp's event handling loop
// Event handling is still done in ROS
rclcpp::spin(self->subscriber_node);
=}

reaction(shutdown) {=
rclcpp::shutdown();
=}
}
